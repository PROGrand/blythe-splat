var Y=Object.defineProperty;var v=(e,i,a)=>i in e?Y(e,i,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[i]=a;var r=(e,i,a)=>v(e,typeof i!="symbol"?i+"":i,a);import"./modulepreload-polyfill.js";/* empty css       */import{Y as X,W as _,o as b,E as R,m as F,l as w,t as f}from"./gsplatjs.js";import{V as k,F as y}from"./fullscreen.js";class t{static async init(){this.renderCanvas=document.getElementById("canvas"),this.splatRenderer=new X(this.renderCanvas),this.splatScene=new _,this.splatCamera=new b,this.splatRenderer.backgroundColor=new R(0,0,0,0);const i=document.getElementById("splat_url").value,a=document.getElementById("progress-indicator");this.splat=await F.LoadAsync(i,this.splatScene,C=>a.value=C*100),this.originalRotation=this.splat.rotation,document.getElementById("progress-dialog").close();const u=()=>{this.splatRenderer.setSize(window.innerWidth,window.innerHeight)},g=()=>{this.splat_frame_id!=null&&cancelAnimationFrame(this.splat_frame_id),this.renderFrame(),setTimeout(()=>{this.splat_frame_id=requestAnimationFrame(g)},100)};u(),window.addEventListener("resize",u),requestAnimationFrame(g)}static renderFrame(){this.splatRenderer.render(this.splatScene,this.splatCamera)}}r(t,"splatRenderer"),r(t,"splatScene"),r(t,"splatCamera"),r(t,"splat"),r(t,"originalRotation"),r(t,"splat_frame_id",null);let s=3,d=0,p=0,m=0,h=0;function I(e){const i=e.clientX-m,a=e.clientY-h;switch(s){case 0:t.splat.position=t.splat.position.add(new f(i*.01,a*.01,0)),console.log("position",t.splat.position);break;case 2:t.splat.rotation=t.originalRotation.multiply(new w((p-e.clientY)*.005,(d-e.clientX)*.005,0,1)).normalize();break;case 1:t.splat.scale=t.splat.scale.add(new f(-a*.01,-a*.01,-a*.01));break}m=e.clientX,h=e.clientY,t.renderFrame()}function P(e){switch(e.button){case 0:s=0;break;case 1:s=1;break;case 2:s=2;break}}function D(){t.originalRotation=t.splat.rotation,s=3}let n=[],c=-1;function z(e){console.log("pointerdown_handler",e),n.push(e),n.length==1?(d=m=e.clientX,p=h=e.clientY,P(e)):n.length==3&&(d=m=(n[2].clientX+n[1].clientX+n[0].clientX)/2,p=h=(n[2].clientY+n[1].clientY+n[0].clientY)/2),o(e)}function A(e){for(let i=0;i<n.length;i++)if(e.pointerId==n[i].pointerId){n[i]=e;break}if(n.length==1)I(n[0]);else if(n.length==3){const i=(n[2].clientX+n[1].clientX+n[0].clientX)/2,a=(n[2].clientY+n[1].clientY+n[0].clientY)/2;t.splat.rotation=t.originalRotation.multiply(new w((p-a)*.005,(d-i)*.005,0,1)).normalize(),t.renderFrame()}else if(n.length==2){const i=Math.sqrt(Math.pow(n[1].clientX-n[0].clientX,2)+Math.pow(n[1].clientY-n[0].clientY,2));if(c>0){const a=(i-c)*.005;t.splat.scale=t.splat.scale.add(new f(a,a,a))}t.renderFrame(),c=i}o(e)}function l(e){B(e),n.length<3&&(c=-1),n.length==0&&D(),o(e)}function B(e){for(let i=0;i<n.length;i++)if(n[i].pointerId==e.pointerId){n.splice(i,1);break}}const o=e=>{e.preventDefault(),e.stopPropagation()};function M(){t.renderCanvas.onpointerdown=z,t.renderCanvas.onpointermove=A,t.renderCanvas.onpointerup=l,t.renderCanvas.onpointercancel=l,t.renderCanvas.onpointerout=l,t.renderCanvas.onpointerleave=l,t.renderCanvas.oncontextmenu=o,t.renderCanvas.ondragover=o,t.renderCanvas.ondragenter=o,t.renderCanvas.ondragleave=o}async function q(){await t.init(),new k(t.renderCanvas),y.init(),M()}q().then();
